#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2024-present Fewtarius

STAGING_MIRRORLIST="/tmp/steamfork-mirrors.txt"
LATEST_MIRRORLIST="/etc/default/steamfork-mirrors"
DEFAULT_MIRRORS=( "www.steamfork.org" "www2.steamfork.org" "www3.steamfork.org" )
CURL_OPTS="--retry 4 --retry-all-errors --retry-delay 1 --connect-timeout 2 --max-time 2"

refresh_mirrors() {
  for MIRROR in ${DEFAULT_MIRRORS[@]}
  do
    curl -Lo ${STAGING_MIRRORLIST} ${CURL_OPTS} https://${MIRROR}/mirrorlist.txt 2>/dev/null
    if [ "$?" = "0" ]
    then
      break
    else
      if [ -f "${STAGING_MIRRORLIST}" ]
      then
        rm -f ${STAGING_MIRRORLIST}
      fi
    fi
  done
  cp -f ${STAGING_MIRRORLIST} ${LATEST_MIRRORLIST}
}

get_mirrors() {
  if [ -f "${LATEST_MIRRORLIST}" ]
  then
	readarray -t MIRROR_LIST < ${LATEST_MIRRORLIST}
  else
	MIRROR_LIST=("${DEFAULT_MIRRORS[@]}")
  fi

  for MIRROR in ${MIRROR_LIST[@]}
  do
    echo "${MIRROR}" >>${STAGING_MIRRORLIST}
  done
}

get_mirrors

case ${1} in
	list)
		### Just a simple list
		cat ${STAGING_MIRRORLIST}
	;;
	random)
		### Randomize the mirror list output
		cat ${STAGING_MIRRORLIST} | sort -R
	;;
	refresh)
		### Fetch the latest mirror list from an official SteamFork mirror
		refresh_mirrors
	;;
	*)
		### Fetch a random mirror from the array
		readarray -t MIRROR_LIST < ${STAGING_MIRRORLIST}
		for COUNT in $(seq 0 1 ${#MIRROR_LIST[@]})
		do
			SELECTED_MIRROR=${MIRROR_LIST[ $RANDOM % ${#MIRROR_LIST[@]}]}
			echo ${SELECTED_MIRROR}
			break
		done
	;;
esac

rm -f ${STAGING_MIRRORLIST}
