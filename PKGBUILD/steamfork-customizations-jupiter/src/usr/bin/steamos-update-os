#!/bin/bash
if [[ $EUID -ne 0 ]];
then
    exec pkexec --disable-internal-agent "$0" "$@"
fi
argdata=$1
ready_watcher=/tmp/steamos-ready-to-deploy
downloadpath=/home/.steamos/updatecontainer
# We assume we entered this step only after confirming that we are okay to continue.
verintg(){
    echo "Starting to update..."
    if [[ -f "${installcontainer}" ]]; then
        CURR_SHA=$(echo $(sha256sum ${installcontainer}) | awk '{print $1}')
        if [[ "${CURR_SHA}" == "$(cat ${installsha})" ]]; then
            echo "Validity matches. Continuing to next step."
        else
            rm -rf ${downloadpath}/${IMAGEFILE}
               echo "Verification failed. Download contents erased."
               exit 1
        fi
    else
        echo "Unable to find update container. (Download issues?)"
        exit 1
    fi
}

cleandeployments(){
    source /etc/steamfork-release
    DEPLOYMENTS_PATH=$(btrfs subvolume list /sf_root | awk '{print $9}' | grep -v ${IMAGE_ID})
    if [[ -z "${DEPLOYMENTS_PATH}" ]]; then
        echo "No unused deployments detected."
    else
        for deployment in $DEPLOYMENTS_PATH;
        do
            echo "Removing unused deployment $deployment..."
            btrfs subvolume delete /sf_root/$deployment
            echo "Finished cleaning up deployments..."
            echo "Going to next step."
        done
    fi
}

finalizeupd(){
    steamfork-deploy switch rootfs/${IMAGEFILE}
    echo "Cleaning up..."
    rm -rf ${downloadpath}/${IMAGEFILE}/
    echo "Update complete."
}

beginupd(){
    # Decompress update container
    echo "Removing unused snapshots..."
    cleandeployments
    echo "Installing OS Image ${STAGING_OS_TAG}..."
    steamfork-deploy install ${installcontainer}
    if [ "$?" = 0 ]
    then
      finalizeupd
    else
      echo "Error deploying image, cleaning up..."
      steamfork-deploy trim ${installcontainer}
      rm -rf ${downloadpath}/${IMAGEFILE}/
      exit 1
    fi
}

if [[ -f ${argdata} ]]; then
    if [[ -f "${ready_watcher}" ]]; then
        source ${argdata}
        installcontainer=${downloadpath}/${IMAGEFILE}/${IMAGEFILE}.img.zst
        installsha=${downloadpath}/${IMAGEFILE}/${IMAGEFILE}.sha256
        verintg
        beginupd
    else
        echo -e "Arg data was found, but ready to update sentinel was not found.\nAre you sure that the update container download was completed?\nTry running [38;2;23;147;209msteamos-update check && steamos-update[0m to verify container integrity again."
    fi
else
    echo "No deploy arguments set."
    exit 1
fi
