#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2024-Present Fewtarius (https://github.com/fewtarius)

function check_network() {
  GW=$(ip route | awk '/eth0/ {a=$0} END{print $1}')
  if [[ ${GW} =~ [0-9] ]]
  then
    echo true
  else
    echo false
  fi
}

### Workaround NetworkManager randomly dying until a better solution
### can be found.

NM_ISACTIVE=$(systemctl is-active NetworkManager)
if [[ "${NM_ISACTIVE}" =~ inactive ]]
then
  systemctl restart NetworkManager
fi

### Check for the last update stamp, and if it isn't a match
### run any post-update scripts and then update the stamp.

UPDATE_STAMP="/etc/post-update.last"
source /etc/os-release
if [ -e "${UPDATE_STAMP}" ]
then
  LAST_UPDATE="$(cat ${UPDATE_STAMP})"
fi

if [ ! "${LAST_UPDATE}" = "${BUILD_ID}" ]
then
  ### We should wait for network to come online before proceeding so
  ### any post-update hooks that need it will succeed.
  COUNT=0
  while true
  do
    AM_I_ONLINE=$(check_network)
    if [ "${AM_I_ONLINE}" = "true" ]
    then
      break
    fi

    ### Test for a condition where the device is started but network is not
    ### online and break.
    COUNT=$(( ${COUNT} + 1 ))
    if (( ${COUNT} >= 10 ))
    then
      exit 0
    fi
    sleep 1
  done

  steamos-readonly disable >/var/log/update.log 2>&1

  ### System provided update directory.
  if [ -d "/usr/share/post-update.d" ]
  then
    for UPDATE in /usr/share/post-update.d/*
    do
      ${UPDATE} >>/var/log/update.log 2>&1
    done
  fi

  ### User writeable update directory.
  if [ -d "/etc/post-update.d" ]
  then
    for UPDATE in /etc/post-update.d/*
    do
      ${UPDATE} >>/var/log/update.log 2>&1
    done
  fi

  steamos-readonly enable >>/var/log/update.log 2>&1
  echo "${BUILD_ID}" >${UPDATE_STAMP}
fi
exit 0
