#!/bin/bash

if [[ $EUID -ne 0 ]];
then
    exec pkexec --disable-internal-agent "$0" "$@"
fi

. /usr/bin/steamfork-devicequirk-set

EFI_LOCATION=$(realpath /dev/disk/by-label/sf_efi)

EFI_STORAGE="/dev/$(lsblk -no pkname ${EFI_LOCATION} | tr -d '[:space:]')"
echo ${EFI_LOCATION} | grep -q -P "^/dev/(nvme|loop|mmcblk)"
if [ $? -eq 0 ]; then
    EFI_PARTNUM=$(echo ${EFI_LOCATION} | cut -d "p" -f 2)
else
    EFI_PARTNUM=$(echo ${EFI_LOCATION} | rev | cut -c 1 | rev)
fi

mount ${EFI_LOCATION} /boot/efi

grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=steamos --removable
if [ ! $? = 0 ]
then
    echo "Failed to install GRUB, exiting..."
    exit 1
fi

if [ -e "/boot/grub/grub.cfg" ]
then
    mv -f /boot/grub/grub.cfg /boot/grub/grub.cfg.bak
fi

grub-mkconfig -o /boot/grub/grub.cfg
if [ ! $? = 0 ]
then
    echo "Failed to configure GRUB, exiting..."
    exit 1
fi

if [ -f "/tmp/fallback-grub.cfg" ]
then
        rm -f "/tmp/fallback-grub.cfg"
fi

ROOTFS_VOLS=( $(ls /sf_root/rootfs/ | sort -r) )
if [ -n "${ROOTFS_VOLS[1]}" ]
then
    ### Create a fallback rootfs (B)
    awk '/### BEGIN \/etc\/grub.d\/10_linux ###/,EOF {print $0}; /### END \/etc\/grub.d\/10_linux ###/ {exit}' /boot/grub/grub.cfg | sed 's~/etc/grub.d/10_linux~Fallback RootFS~g' >>/tmp/fallback-grub.cfg
    sed -i 's~'${ROOTFS_VOLS[0]#steamfork_*_*}'~'${ROOTFS_VOLS[1]#steamfork_*_*}'~g' /tmp/fallback-grub.cfg
    sed -i '/### END \/etc\/grub.d\/10_linux ###/ r /tmp/fallback-grub.cfg' /boot/grub/grub.cfg
fi

echo "Installing grub entry on ${EFI_STORAGE}, partition number ${EFI_PARTNUM}"
for ENTRY in $(efibootmgr | awk '/[Ss]team[Ff]ork/ {print $1}' | sed -e 's~Boot~~g;s~\W$~~g')
do
  echo "Removing stale EFI entry ${ENTRY}"
  efibootmgr -B -b ${ENTRY}
done
efibootmgr -c -d ${EFI_STORAGE} -p ${EFI_PARTNUM} -L "SteamFork (GRUB)" -l '\EFI\steamos\grubx64.efi'
if [ ! $? = 0 ]
then
    echo "Failed to configure EFI, exiting..."
    exit 1
fi
umount -l /boot/efi
