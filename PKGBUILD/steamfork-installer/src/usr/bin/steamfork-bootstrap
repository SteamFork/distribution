#!/bin/bash
## Installation bootstrapper

sync

function log_progress() {
    local percentage=$1
    local message=$2
    echo "${percentage}%: ${message}"
}

function run_command() {
    local cmd=$1
    local percentage=$2
    local message=$3

    log_progress "${percentage}" "${message}"
    eval "${cmd}"
    local exit_code=$?
    if [[ $exit_code -ne 0 ]]; then
        log_progress "100" "Error ${exit_code} at step: ${message}. Installation Failed..."
        exit 1
    fi
}

while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    --username)
    OSUSER="$2"
    shift # past argument
    shift # past value
    ;;
    --password)
    OSPASS="$2"
    shift # past argument
    shift # past value
    ;;
    --root_password)
    ROOTPASS="$2"
    shift # past argument
    shift # past value
    ;;
    --reinstall)
    IS_REINSTALL="1"
    shift # past argument
    shift # past value
    ;;
    --reset)
    IS_RESET="1"
    shift # past argument
    shift # past value
    ;;
    --keepdata)
    IS_KEEPDATA="1"
    shift # past argument
    shift # past value
    ;;
    --mode)
    MODE="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    echo "Unknown option: $1"
    exit 1
    ;;
esac
done

if [[ -n "$(blkid | grep sf)" ]]; then
    ROOTLOCATION=/tmp/sf_root
    INSTALLLOCATION=${ROOTLOCATION}/rootfs
    HOMELOCATION_TEMP=/tmp/sf_home
    SNAPSHOT_FUTURELOC=${HOMELOCATION_TEMP}/.steamos/installcontainer
    SUBVOL=$(ls /etc/install.image/*.img.zst | sed -s 's/.img.zst//g')
    SUBVOL=$(basename ${SUBVOL})
    SUBVOLLOCATION=/tmp/subvol

    log_progress 26 "Bootstrapping SteamFork image $SUBVOL on $(blkid -L sf_root)..."

    mkdir -p ${ROOTLOCATION} ${HOMELOCATION_TEMP}

    run_command "mount -L sf_root -o compress-force=zstd:1,discard,noatime,nodiratime ${ROOTLOCATION}" 28 "Mounting root filesystem"
    run_command "mount -L sf_home ${HOMELOCATION_TEMP}" 30 "Mounting home filesystem"

    # Start build deploying here
    mkdir -p ${SNAPSHOT_FUTURELOC} ${INSTALLLOCATION} ${HOMELOCATION_TEMP} ${SNAPSHOT_FUTURELOC} ${SUBVOLLOCATION}
    if [[ "${IS_RESET}" == "1" ]]; then
        run_command "btrfs subvolume delete ${INSTALLLOCATION}/${SUBVOL}" 32 "Removing current copy of subvolume"
    fi

    if [[ ! -d "${INSTALLLOCATION}/${SUBVOL}" ]]; then
        run_command "cp /etc/install.image/${SUBVOL}.img.zst ${SNAPSHOT_FUTURELOC}/" 34 "Copying rootfs image to home partition"
        run_command "zstd -df ${SNAPSHOT_FUTURELOC}/${SUBVOL}.img.zst" 36 "Decompressing rootfs"
        run_command "rm -rf ${SNAPSHOT_FUTURELOC}/${SUBVOL}.img.zst" 38 "Removing compressed rootfs image"
        run_command "btrfs receive ${INSTALLLOCATION} < ${SNAPSHOT_FUTURELOC}/${SUBVOL}.img" 40 "Installing rootfs image to partition"
        run_command "rm -rf ${SNAPSHOT_FUTURELOC}/${SUBVOL}.img" 42 "Removing rootfs image"
    else
        log_progress 44 "Installer subvolume already exists on container, skipping bootstrap..."
    fi
    run_command "mount -L sf_root -o subvol=rootfs/${SUBVOL},compress-force=zstd:1,discard,noatime,nodiratime ${SUBVOLLOCATION}" 46 "Mounting subvolume"
    run_command "mount -L sf_efi ${SUBVOLLOCATION}/boot/efi" 48 "Mounting EFI partition"
    run_command "mount -L sf_home ${SUBVOLLOCATION}/home" 50 "Mounting home partition"
    run_command "mount -L sf_var ${SUBVOLLOCATION}/var" 52 "Mounting var partition"

    log_progress 54 "Installing bootloader..."

    run_command "arch-chroot ${SUBVOLLOCATION} steamos-readonly disable" 56 "Disabling SteamOS read-only mode"
    run_command "arch-chroot ${SUBVOLLOCATION} mkinitcpio -P" 58 "Generating initramfs"
    run_command "arch-chroot ${SUBVOLLOCATION} steamfork-grub-update" 60 "Updating GRUB"

    log_progress 62 "Configuring swap..."
    # Check if swap is already enabled
    if arch-chroot ${SUBVOLLOCATION} swapon --show | grep -q '/dev/zram0'; then
        log_progress 63 "Swap is already enabled on the local system. Skipping swap configuration."
    else
        run_command "arch-chroot ${SUBVOLLOCATION} steamfork-enable-swap" 64 "Enabling swap"
        run_command "arch-chroot ${SUBVOLLOCATION} swapoff -a" 66 "Disabling swap"
    fi
    mkdir -p ${SUBVOLLOCATION}/var/overlays/etc/work ${SUBVOLLOCATION}/var/overlays/etc/upper
    run_command "mount -t overlay ${SUBVOLLOCATION}/etc -o index=off,metacopy=off,lowerdir=${SUBVOLLOCATION}/etc,upperdir=${SUBVOLLOCATION}/var/overlays/etc/upper,workdir=${SUBVOLLOCATION}/var/overlays/etc/work ${SUBVOLLOCATION}/etc" 68 "Mounting overlay filesystem"
    run_command "echo -e \"${ROOTPASS}\n${ROOTPASS}\" | arch-chroot ${SUBVOLLOCATION} passwd root" 70 "Setting root password"

    if [[ ! -z "${OSUSER}" ]]; then
        log_progress 72 "Creating user ${OSUSER}..."
        for file in /etc/group /etc/shadow /etc/passwd
        do
            run_command "arch-chroot ${SUBVOLLOCATION} sed -i '/^'${OSUSER}':/d' ${file}" 74 "Removing existing user ${OSUSER} from ${file}"
        done
        run_command "arch-chroot ${SUBVOLLOCATION} rm -rf /home/${OSUSER}" 76 "Removing existing home directory for ${OSUSER}"
        run_command "arch-chroot ${SUBVOLLOCATION} groupadd -g 1000 ${OSUSER}" 78 "Creating group for ${OSUSER}"
        run_command "arch-chroot ${SUBVOLLOCATION} useradd --create-home -d /home/${OSUSER} -c \"Steam Deck User\" -s /bin/bash -u 1000 -g 1000 ${OSUSER}" 80 "Creating user ${OSUSER}"
        run_command "arch-chroot ${SUBVOLLOCATION} usermod -aG wheel ${OSUSER}" 82 "Adding ${OSUSER} to wheel group"
        run_command "arch-chroot ${SUBVOLLOCATION} usermod -aG video ${OSUSER}" 84 "Adding ${OSUSER} to video group"
        run_command "arch-chroot ${SUBVOLLOCATION} usermod -aG steamos-log-submitter ${OSUSER}" 86 "Adding ${OSUSER} to steamos-log-submitter group"
        run_command "arch-chroot ${SUBVOLLOCATION} cp -f /usr/share/icons/steam/${OSUSER}-face.icon /home/${OSUSER}/.face.icon" 88 "Copying user icon for ${OSUSER}"
        run_command "arch-chroot ${SUBVOLLOCATION} chown ${OSUSER}:${OSUSER} /home/${OSUSER}/.face.icon" 90 "Setting ownership of user icon for ${OSUSER}"
        run_command "echo -e \"${OSPASS}\n${OSPASS}\" | arch-chroot ${SUBVOLLOCATION} passwd ${OSUSER}" 92 "Setting password for ${OSUSER}"

        if [[ "${MODE}" == "desktop" ]]; then
            run_command "arch-chroot ${SUBVOLLOCATION} /usr/bin/bash -c 'IN_CHROOT=true /usr/bin/steamos-session-select desktop'" 94 "Switching to desktop mode"
        fi
    elif [[ "${IS_RESET}" == "1" ]]; then
        run_command "mount -t overlay ${SUBVOLLOCATION}/etc -o index=off,metacopy=off,lowerdir=${SUBVOLLOCATION}/etc,upperdir=${SUBVOLLOCATION}/var/overlays/etc/upper,workdir=${SUBVOLLOCATION}/var/overlays/etc/work ${SUBVOLLOCATION}/etc" 96 "Mounting overlay filesystem for reset"
        log_progress 98 "Restoring this installation to system defaults..."
        RESIDUE=$(find ${SUBVOLLOCATION}/var/overlays/etc/upper | sed 1d | grep -v group | grep -v passwd | grep -v shadow | grep -v sddm.conf.d | grep -v .pwd.lock)
        if [[ ! -z "${RESIDUE}" ]]; then
            run_command "rm -rf ${RESIDUE}" 99 "Removing residue in /etc"
        fi
        run_command "rm -rf ${SUBVOLLOCATION}/home/{*,.*}" 99 "Removing user folder residue"
        USER=$(cat ${SUBVOLLOCATION}/var/overlays/etc/upper/passwd | grep /home/ | cut -d ':' -f 1)
        run_command "arch-chroot ${SUBVOLLOCATION} mkhomedir_helper ${USER}" 99 "Creating home directory for ${USER}"
    else
        log_progress 94 "No user added, assuming upgrade..."
    fi

    REALEXITCODE="$?"

    if [[ "${REALEXITCODE}" -ne "0" ]]; then
        echo "Installation failed."
        exit 127
    fi

    sync
    log_progress 99 "Finished, unmounting filesystems..."
    for drive in $(echo "sf_home sf_var sf_efi sf_root")
    do
        run_command "umount -f $(blkid -L $drive)" 99 "Unmounting $drive"
    done
    run_command "umount -l ${SUBVOLLOCATION} && umount -l ${HOMELOCATION_TEMP}" 99 "Unmounting subvolume and home location"
    log_progress 100 "Installation complete."
    exit 0
else
    echo "Partition layout not detected. Aborting bootstrap"
    exit 127
fi
