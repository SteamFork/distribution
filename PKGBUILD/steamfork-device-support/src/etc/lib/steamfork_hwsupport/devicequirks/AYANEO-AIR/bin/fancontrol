#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2023 JELOS (https://github.com/JustEnoughLinuxOS)

. /etc/profile

DEVICE_HAS_FAN="true"
DEVICE_PWM_FAN="$(find /sys/devices/platform/oxp-platform -name pwm1)"
DEVICE_FAN_INPUT="$(find /sys/devices/platform/oxp-platform -name fan*_input)"
DEVICE_TEMP_SENSOR="$(find /sys/devices/pci*/*/hwmon -path "*/nvme" -prune -o -name temp1_input -print)"

### Enable logging
case $(steamfork-get-setting system.loglevel) in
	verbose)
		VERBOSE=true
		;;
	debug)
		VERBOSE=true
		DEBUG=true
		;;
	*)
		VERBOSE=false
		DEBUG=false
		;;
esac

COOLING_PROFILE=$(get_setting "cooling.profile")
FAN_PWM="${DEVICE_PWM_FAN}"

function set_control() {
  log $0 "Set fan control to ${1}"
  if [ -e "${DEVICE_PWM_FAN}_enable" ]
  then
    echo ${1} >${DEVICE_PWM_FAN}_enable
  fi
}

trap "set_control 0 && exit 0" SIGHUP SIGINT SIGQUIT SIGABRT

if [ -z "${COOLING_PROFILE}" ]
then
    COOLING_PROFILE="quiet"
    set_setting cooling.profile quiet
fi

$VERBOSE && log $0 "Setting profile to ${COOLING_PROFILE}"

if [ "${COOLING_PROFILE}" = "aggressive" ]
then
  SPEEDS=(192 225 255)
  TEMPS=(45000 75000 85000)
  SLEEP_TIME=1
elif [ "${COOLING_PROFILE}" = "moderate" ]
then
  SPEEDS=(48 64 96 128 192 255)
  TEMPS=(50000 55000 60000 70000 80000 90000)
  SLEEP_TIME=1.5
elif [ "${COOLING_PROFILE}" = "quiet" ]
then
  # Quiet.
  SPEEDS=(32 48 64 96 128 192 255)
  TEMPS=(55000 60000 65000 70000 80000 90000 95000)
  SLEEP_TIME=2
else
  # auto
  set_control 0 >/dev/null 2>&1
  exit 0
fi

log $0 "Enabling fan control."
set_control 1 >/dev/null 2>&1

CURRENTSPEED=0
TEMP=${TEMPS[0]}
declare -a HISTORY
while true
do
  INDEX=0
  CPU_TEMP=$(printf "%.0f" $(awk '{ total += $1; count++ } END { print total/count }' ${DEVICE_TEMP_SENSOR}))

  ### Keep a rolling history of CPU temps.
  HISTORY+=(${CPU_TEMP})
  while (( ${#HISTORY[@]} > 10 ))
  do
    unset HISTORY[-0]
    PRIOR_HISTORY=( ${HISTORY[*]} )
    HISTORY=( ${PRIOR_HISTORY[*]} )
    unset PRIOR_HISTORY
  done
  AVERAGE=$(echo $(IFS=+; echo "$((${HISTORY[*]}))") / ${#HISTORY[@]} | bc)

  $DEBUG && log $0 "Current/Average/Ceiling (Speed): ${CPU_TEMP}/${AVERAGE}/${TEMP} (${CURRENTSPEED})."
  for TEMP in "${TEMPS[@]}"
  do
    if (( "${CPU_TEMP}" >= "90000" )) || \
       (( "${AVERAGE}" <= "${TEMP}" ))
    then
      if (( ${CURRENTSPEED} != ${SPEEDS[${INDEX}]} ))
      then
	if (( "${CPU_TEMP}" >= "90000" )) && \
	   (( "${AVERAGE}" <= "${TEMP}" ))
	then
		CURRENTSPEED=${SPEEDS[$(( ${#SPEEDS[@]} - 1 ))]}
	else
		CURRENTSPEED=${SPEEDS[${INDEX}]}
	fi
	echo ${CURRENTSPEED} >${FAN_PWM}
	$DEBUG && log $0 "Set fan to ${CURRENTSPEED}."
      fi
      break
    else
      INDEX=$(( $INDEX + 1 ))
    fi
  done
  sleep ${SLEEP_TIME}
done

log $0 "Disabling fan control."
set_control 0 >/dev/null 2>&1
