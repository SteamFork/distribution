#!/bin/bash

# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2024 SteamFork (https://github.com/SteamFork)

# Source predefined functions and variables
. /etc/profile

### Enable logging
case $(steamfork-get-setting system.loglevel) in
  verbose)
    DEBUG=true
  ;;
  *)
    DEBUG=false
  ;;
esac


sudo udevadm trigger && udevadm monitor -s drm -s sound 2>/dev/null |  while read LINE
do
	$DEBUG && echo "Input: ${LINE}.."
	unset HDMI_DEVICE HDMI_STATE OUTPUT_ENABLED HDMI_SINK AUDIO_PROFILE USB_CARD_ID USB_CARD_SINK
	CARD="$(echo ${LINE} | awk '{print $4}')"
	CARD="$(echo ${CARD} | awk 'BEGIN {FS="/"} {print $NF}')"
        if [[ ${CARD} =~ card[0-9] ]]
	then
		case ${LINE} in
			*drm*)
				sleep .5
				for HDMI in /sys/class/drm/${CARD}/card*/status
				do
					HDMI_DEVICE=$(echo ${HDMI} | awk 'BEGIN {FS="-"} {print tolower($2)}')
					HDMI_STATE=$(cat ${HDMI} 2>/dev/null)
					$DEBUG && echo "Checking ${HDMI_DEVICE} (${HDMI_STATE})."
					case ${HDMI_STATE} in
					connected)
						OUTPUT_ENABLED=$(<$(dirname ${HDMI})/enabled)
						if [ "${OUTPUT_ENABLED}" = "enabled" ]
						then
							$DEBUG && echo "${HDMI_DEVICE} is connected and enabled."
							if [[ "${HDMI_DEVICE}" =~ hdmi|dp ]]
							then
								### DisplayPort can be named dp or hdmi, so look for both if connected.
								HDMI_DEVICE="hdmi|dp"
							fi
							HDMI_SINK=$(pactl list short sinks | awk '/'${HDMI_DEVICE}'/ {print $2; exit}')
							if [ -n "${HDMI_SINK}" ]
							then
								$DEBUG && echo "Set default sink to ${HDMI_SINK}."
								pactl set-default-sink ${HDMI_SINK}
								break
							fi
						fi
						;;
					esac
				done
				;;
			*sound*)
				AUDIO_PROFILE=$(steamfork-get-setting audio.profile)
				USB_CARD_ID=$(pactl list short cards | awk '/usb/ {print $1; exit}')
				USB_CARD_SINK=$(pactl list short sinks | awk '/usb/ {print $2; exit}')
				$DEBUG && echo "Found USB device ${USB_CARD_ID} (${USB_CARD_SINK})."
				if [ -n "${USB_CARD_SINK}" ]
				then
					$DEBUG && echo "Set default sink to ${USB_CARD_SINK}."
					pactl set-default-sink ${USB_CARD_SINK}
					pactl set-default-source ${USB_CARD_SINK}.monitor
					if [ -n "${AUDIO_PROFILE}" ]
					then
						$DEBUG && echo "Set ${USB_CARD_ID} to ${AUDIO_PROFILE}."
						pactl set-card-profile ${USB_CARD_ID} ${AUDIO_PROFILE}
					fi
				fi
				;;
		esac

	fi
done
