# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2025 SteamFork (https://github.com/SteamFork)
# This workflow destroys and recreates the SteamFork package repository and then syncs it to all known mirrors.

name: Build All Packages

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build_all_packages:
    timeout-minutes: 1440
    runs-on: ${{ github.event.inputs.branch }}

    steps:
      - name: Clean repository
        run: |
          if [ -f Makefile ]; then
            make repo-clean
          fi
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          clean: false

      - name: Configure GPG agent
        run: |
          mkdir -p ~/.gnupg
          echo "use-agent" > ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo "default-cache-ttl 86400" >> ~/.gnupg/gpg-agent.conf
          echo "max-cache-ttl 86400" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent
          gpgconf --launch gpg-agent

      - name: Save GPG key to file
        run: |
          echo "$GPG_PRIVATE_KEY" > ~/.gnupg/private.key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Import GPG key
        run: |
          gpg --batch --yes --import ~/.gnupg/private.key

      - name: Set GPG trust level
        run: |
          echo "${{ secrets.GPG_KEY_ID }}:6:" | gpg --batch --yes --import-ownertrust

      - name: Trust GPG key for pacman
        run: |
          sudo pacman-key --init
          sudo pacman-key --populate
          sudo pacman-key --add ~/.gnupg/private.key
          sudo pacman-key --lsign-key ${{ secrets.GPG_KEY_ID }}
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Sign an empty file to ensure GPG key is available
        run: |
          touch emptyfile
          echo "$GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --sign emptyfile
          rm -f emptyfile emptyfile.gpg
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Configure ccache
        run: |
          ccache --max-size=10G

      - name: Clear pacman cache
        run: |
          sudo pacman -Scc --noconfirm

      - name: Build all packages
        run: |
          make packages-all

      - name: Sync packages
        if: github.repository == 'SteamFork/distribution'
        run: make packages-sync

      - name: Sync mirrors
        if: github.repository == 'SteamFork/distribution'
        run: make mirrors-sync
