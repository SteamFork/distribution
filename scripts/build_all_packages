#!/bin/bash
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2025 SteamFork (https://github.com/SteamFork)

# Log function for consistent output
log() {
  local msg="$1"
  echo "$(date +'%Y-%m-%d %H:%M:%S') - ${msg}"
}

# Source the environment variables from the Makefile
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MAKEFILE_PATH="${SCRIPT_DIR}/../Makefile"
eval $(make -s -f "${MAKEFILE_PATH}" env)

PACKAGES_LIST="${SCRIPT_DIR}/../metadata/packages.list"

# Load packages list into an array
mapfile -t packages < "$PACKAGES_LIST"

# Read the packages list and build each package with dependencies
for ((i = 0; i < ${#packages[@]}; i++)); do
    line="${packages[$i]}"
    log "Processing line: $line"

    # Use awk to parse the line
    PKG=$(echo "$line" | awk -F'|' '{print $2}')
    REPO_FLAG=$(echo "$line" | awk -F'|' '{print $1}')

    log "Parsed PKG: $PKG, REPO_FLAG: $REPO_FLAG"

    if [[ -z "$PKG" || -z "$REPO_FLAG" ]]; then
        log "Unknown package type: $line"
        continue
    fi

    # Check if the package is in the correct order
    if [[ "$line" != "${packages[$i]}" ]]; then
        log "Error: Package $PKG is out of order. Exiting."
        exit 1
    fi

    log "Clearing pacman cache..."
    yes | sudo pacman -Scc --noconfirm
    if [ $? -ne 0 ]; then
        log "Error: Failed to clear pacman cache."
        exit 1
    fi

    log "Building package: $PKG (repo: $REPO_FLAG)"
    "${SCRIPT_DIR}/build_package" --repo ${REPO_FLAG} "$PKG"
    if [ $? -ne 0 ]; then
        log "Error: Failed to build package $PKG. Exiting."
        exit 1
    fi

    log "Successfully built package: $PKG"
done

log "All packages built successfully."
