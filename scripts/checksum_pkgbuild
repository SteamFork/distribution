#!/bin/bash

# Source the environment variables from the Makefile
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
MAKEFILE_PATH="${SCRIPT_DIR}/../Makefile"
eval $(make -s -f "${MAKEFILE_PATH}" env)

# Directory containing PKGBUILD directories
PKGBUILD_DIR="${SCRIPT_DIR}/../PKGBUILD"

# Enable debug logging if DEBUG is set to true
DEBUG=${DEBUG:-false}

# Function to handle logging
log() {
    local MESSAGE=$1
    if [ "$DEBUG" = true ]; then
        echo "[DEBUG] $MESSAGE" >&2
    fi
}

# Function to check for mismatched SHA-256 checksums
check_checksums() {
    local PKG_DIR=$1
    local CHECKSUM
    CHECKSUM=$(find "${PKG_DIR}" -type f -not -name '.checksum' -not -name '*.gz' -not -name '*.bz2' -not -name '*.xz' -printf '%T@ %p\n' | sha256sum | awk '{print $1}')

    # Compare the checksum with the stored checksum
    if [[ -f "${PKG_DIR}/.checksum" ]]; then
        local STORED_CHECKSUM
        STORED_CHECKSUM=$(cat "${PKG_DIR}/.checksum")
        if [[ "${CHECKSUM}" != "${STORED_CHECKSUM}" ]]; then
            echo "$(basename "${PKG_DIR}")"
            log "Mismatch in directory: ${PKG_DIR}"
            log "Stored checksum: ${STORED_CHECKSUM}"
            log "New checksum: ${CHECKSUM}"
        fi
    fi

    # Always update the checksum
    echo "${CHECKSUM}" > "${PKG_DIR}/.checksum"
}

# Iterate over each directory in PKGBUILD and check for mismatched checksums
for PKG_DIR in "${PKGBUILD_DIR}"/*; do
    if [[ -d "${PKG_DIR}" ]]; then
        check_checksums "${PKG_DIR}"
    fi
done