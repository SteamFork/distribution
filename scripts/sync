#!/bin/sh
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2024 SteamFork (https://github.com/SteamFork)

if [ -f "${HOME}/.SteamFork/options" ]
then
 source "${HOME}/.SteamFork/options"
fi

for KEY in WWWHOST WWWUSER WWWROOT SIGNKEY REPO_DIR IMAGE_DIR MIRROR_HOSTS
do
  if [ -z "${!KEY}" ]
  then
    echo "Export ${KEY} before using this script."
    exit 1
  fi
done

case ${1} in
  pkgs|repo)
    for REPO in rel minimal
    do
      WORKING_REPO="${REPO_DIR}/${REPO}"
      if [ -d "${WORKING_REPO}" ]
      then
        cd ${WORKING_REPO}
        repo-add --sign -k ${SIGNKEY} steamfork.db.tar.gz *zst
        cd -
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}; ln -sf ${WWWROOT}/repos/${REPO} steamfork-${REPO}"
      fi
    done
    rsync -av --delete --progress --stats ${REPO_DIR} ${WWWUSER}@${WWWHOST}:${WWWROOT}/
    ssh -tt ${WWWUSER}@${WWWHOST} "chown -R www-data:www-data ${WWWROOT}/"
  ;;
  os)
      cat <<EOF >/tmp/index.html
<head>
<meta name="description" content="SteamFork Linux distribution image hosting.">
<meta name="keywords" content="SteamFork, SteamOS, HoloISO, Linux, Gaming, Handheld">
<body>
EOF
    ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/; rm -rf images-new ||:; cp -rf images images-new"
    for REL in rel minimal
    do
      DEPLOY_DIR="${IMAGE_DIR}/${REL}/images"
      if [ -e "${DEPLOY_DIR}/latest_${REL}.releasemeta" ]
      then
	echo "Syncing ${REL}."
        source ${DEPLOY_DIR}/latest_${REL}.releasemeta
	UPDATEFILE=${IMAGEFILE}
        IMAGEFILE="$(echo ${IMAGEFILE} | sed 's~_~-~g')"
	ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images-new; rm -f \$(ls | grep steamfork_${REL}_ | grep -v ${STAGING_OS_TAG}) latest_${REL}*"
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images-new/installer; rm -f \$(ls | grep steamfork-${REL}- | grep -v ${STAGING_OS_TAG}) latest_${REL}*"
       while true
       do
         rsync -av --progress --stats ${DEPLOY_DIR}/* ${WWWUSER}@${WWWHOST}:${WWWROOT}/images-new/
         if [ $? = 0 ]
         then
           break
         fi
         sleep 5
       done
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images-new/installer/; sha256sum ${IMAGEFILE}-x86_64.iso | tee -a ${IMAGEFILE}-x86_64.iso.sha256"
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images-new/installer/; ln -sf ${IMAGEFILE}-x86_64.iso steamfork-${REL}-latest-x86_64.iso"
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images-new/installer/; ln -sf ${IMAGEFILE}-x86_64.iso.sha256 steamfork-${REL}-latest-x86_64.iso.sha256"
	echo "Add ${REL} to index."
        cat <<EOF >>/tmp/index.html
<p>
SteamFork v${STAGING_OS_TAG} (${REL}) installation image: <a href="/images/installer/${IMAGEFILE}-x86_64.iso">${IMAGEFILE}-x86_64.iso</a>
<br>
SteamFork v${STAGING_OS_TAG} (${REL}) checksum: <a href="/images/installer/${IMAGEFILE}-x86_64.iso.sha256">${IMAGEFILE}-x86_64.iso.sha256</a>
<p>
SteamFork v${STAGING_OS_TAG} (${REL}) update image: <a href="/images/${UPDATEFILE}.img.zst">${UPDATEFILE}.img.zst</a>
<br>
SteamFork v${STAGING_OS_TAG} (${REL}) checksum: <a href="/images/${UPDATEFILE}.sha256">${UPDATEFILE}.sha256</a>
<p>
EOF
      fi
    done
cat <<EOF >>/tmp/index.html
</body>
</head>
EOF
    scp /tmp/index.html ${WWWUSER}@${WWWHOST}:${WWWROOT}/images-new/installer/
    ssh -tt ${WWWUSER}@${WWWHOST} "chown -R www-data:www-data ${WWWROOT}/images-new"
    ssh -tt ${WWWUSER}@${WWWHOST} "mv ${WWWROOT}/images ${WWWROOT}/images-old; mv ${WWWROOT}/images-new/ ${WWWROOT}/images; rm -rf ${WWWROOT}/images-old"
    ssh -tt ${WWWUSER}@${WWWHOST} "mkdir -p ${WWWROOT}/meta/steamos/amd64/${STAGING_OS_TAG}/steamdeck; echo "{ }" >${WWWROOT}/meta/steamos/amd64/${STAGING_OS_TAG}/steamdeck/${STAGING_OS_TAG}.json"
  ;;
  mirrors)
    for MIRROR_HOST in ${MIRROR_HOSTS}
    do
      ssh -tt ${WWWUSER}@${WWWHOST} "rsync -av --no-checksum --no-perms --delete --exclude=${WWWROOT}/.sync.txt ${WWWROOT}/* ${MIRROR_HOST}:${WWWROOT}/"
      ssh -tt ${MIRROR_HOST} "sudo find ${WWWROOT} -type f -exec chown www-data:www-data {} \;; sudo find ${WWWROOT} -type f -exec chmod 664 {} \;; sudo find ${WWWROOT} -type d -exec chmod 775 {} \;;"
    done
  ;;
esac

