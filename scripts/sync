#!/bin/sh
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2024 SteamFork (https://github.com/SteamFork)

if [ -f "${HOME}/.SteamFork/options" ]
then
 source "${HOME}/.SteamFork/options"
fi

for KEY in WWWHOST WWWUSER WWWROOT SIGNKEY REPO_DIR IMAGE_DIR MIRROR_HOSTS MIRROR_KEY
do
  if [ -z "${!KEY}" ]
  then
    echo "Export ${KEY} before using this script."
    exit 1
  fi
done

### Generate a mirror list.
echo "www.steamfork.org" >/tmp/mirrorlist.txt
for HOST in ${WEB_HOSTS[*]#*@}
do
  echo ${HOST} >>/tmp/mirrorlist.txt
done

case ${1} in
  pkgs|repo)
    for REPO in rel minimal
    do
      WORKING_REPO="${REPO_DIR}/${REPO}"
      if [ -d "${WORKING_REPO}" ]
      then
        cd ${WORKING_REPO}
        repo-add --verify --sign -k ${SIGNKEY} steamfork.db.tar.gz *zst
        cd -
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}; ln -sf ${WWWROOT}/repos/${REPO} steamfork-${REPO}"
      fi
    done
    rsync -av --delete --progress --stats ${REPO_DIR} ${WWWUSER}@${WWWHOST}:${WWWROOT}/
    ssh -tt ${WWWUSER}@${WWWHOST} "chown -R www-data:www-data ${WWWROOT}/"
  ;;
  os-sync)
    ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/; rm -rf images.new ||:; cp -rf images images.new"
    for REL in rel minimal
    do
      DEPLOY_DIR="${IMAGE_DIR}/${REL}/images"
      if [ -e "${DEPLOY_DIR}/latest_${REL}.releasemeta" ]
      then
	echo "Syncing ${REL}."
        source ${DEPLOY_DIR}/latest_${REL}.releasemeta
	UPDATEFILE=${IMAGEFILE}
        IMAGEFILE="$(echo ${IMAGEFILE} | sed 's~_~-~g')"
	ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images.new; rm -f \$(ls | grep steamfork_${REL}_ | grep -v ${STAGING_OS_TAG}) latest_${REL}*"
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images.new/installer; rm -f \$(ls | grep steamfork-${REL}- | grep -v ${STAGING_OS_TAG}) latest_${REL}*"
       while true
       do
         rsync -av --progress --stats ${DEPLOY_DIR}/* ${WWWUSER}@${WWWHOST}:${WWWROOT}/images.new/
         if [ $? = 0 ]
         then
           break
         fi
         sleep 5
       done
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images.new/installer/; sha256sum ${IMAGEFILE}-x86_64.iso | tee -a ${IMAGEFILE}-x86_64.iso.sha256"
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images.new/installer/; ln -sf ${IMAGEFILE}-x86_64.iso steamfork-${REL}-latest-x86_64.iso"
        ssh -tt ${WWWUSER}@${WWWHOST} "cd ${WWWROOT}/images.new/installer/; ln -sf ${IMAGEFILE}-x86_64.iso.sha256 steamfork-${REL}-latest-x86_64.iso.sha256"
      fi
    done
    scp /tmp/mirrorlist.txt ${WWWUSER}@${WWWHOST}:${WWWROOT}/
    ssh -tt ${HOST} "mkdir -p ${WWWROOT}/meta/steamos/amd64/${STAGING_OS_TAG}.0/steamdeck; echo "{ }" >${WWWROOT}/meta/steamos/amd64/${STAGING_OS_TAG}.0/steamdeck/${STAGING_OS_TAG}.json"

  ;;
  os-release)
    for HOST in $${WWWUSER}@${WWWHOST} ${MIRROR_HOSTS}
    do
      ssh -tt ${HOST} "chown -R www-data:www-data ${WWWROOT}/images.new"
      ssh -tt ${HOST} "rm -rf ${WWWROOT}/images.prev; mv ${WWWROOT}/images ${WWWROOT}/images.prev; mv ${WWWROOT}/images.new/ ${WWWROOT}/images"
    done
  ;;
  mirrors)
    scp ${HOME}/.SteamFork/${MIRROR_KEY} ${WWWUSER}@${WWWHOST}:${HOME}/.ssh
    ssh -tt ${HOST} "chmod 0700 .ssh; chmod 0600 .ssh/${MIRROR_KEY}"
    for MIRROR_HOST in ${MIRROR_HOSTS}
    do
      scp /tmp/mirrorlist.txt ${WWWUSER}@${WWWHOST}:${WWWROOT}/
      ssh -tt ${WWWUSER}@${WWWHOST} "rsync -av --progress --stats --no-checksum --no-perms --delete --exclude=${WWWROOT}/.sync.txt ${WWWROOT}/* ${MIRROR_HOST}:${WWWROOT}/"
      ssh -tt ${MIRROR_HOST} "sudo find ${WWWROOT} -type f -exec chown www-data:www-data {} \;; sudo find ${WWWROOT} -type f -exec chmod 664 {} \;; sudo find ${WWWROOT} -type d -exec chmod 775 {} \;;"
    done
    ssh -tt ${HOST} "rm -f .ssh/${MIRROR_KEY}"
  ;;
esac

rm -f /tmp/mirrorlist.txt
